--- a/src/main/java/io/papermc/paper/event/player/PlayerPickItemEvent.java
+++ b/src/main/java/io/papermc/paper/event/player/PlayerPickItemEvent.java
@@ -1,6 +_,8 @@
 package io.papermc.paper.event.player;
 
 import com.google.common.base.Preconditions;
+import org.bukkit.Location;
+import org.bukkit.entity.Entity;
 import org.bukkit.entity.Player;
 import org.bukkit.event.Cancellable;
 import org.bukkit.event.HandlerList;
@@ -21,14 +_,21 @@

     private int targetSlot;
     private int sourceSlot;
+    private final Location location;
+    private final Entity entity;
+    private boolean isRequestingData;
+

     private boolean cancelled;
 
     @ApiStatus.Internal
-    public PlayerPickItemEvent(final Player player, final int targetSlot, final int sourceSlot) {
+    public PlayerPickItemEvent(final Player player, final int targetSlot, final int sourceSlot, final Location location, final Entity entity, boolean isRequestingData) {
         super(player);
         this.targetSlot = targetSlot;
         this.sourceSlot = sourceSlot;
+        this.location = location;
+        this.entity = entity;
+        this.isRequestingData = isRequestingData;
     }
 
     /**
@@ -72,6 +_,18 @@
     public void setSourceSlot(final @Range(from = -1, to = 35) int sourceSlot) {
         Preconditions.checkArgument(sourceSlot >= -1 && sourceSlot <= 35, "Source slot must be in range of the player's inventory slot, or -1");
         this.sourceSlot = sourceSlot;
+    }
+
+    public @org.jetbrains.annotations.Nullable Location getLocation() {
+        return location;
+    }
+
+    public @org.jetbrains.annotations.Nullable Entity getEntity() {
+        return entity;
+    }
+
+    public boolean isRequestingData() {
+        return isRequestingData;
     }
 
     @Override
