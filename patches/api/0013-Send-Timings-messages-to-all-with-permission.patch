From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Blast-MC <cjblanton2@gmail.com>
Date: Sat, 16 Jul 2022 22:10:30 -0400
Subject: [PATCH] Send Timings messages to all with permission


diff --git a/src/main/java/co/aikar/timings/Timings.java b/src/main/java/co/aikar/timings/Timings.java
index dd72a34eaa4bedd9ea0b92eaa79091b00eb4dd09..7175620d0c66b376cfdfd5f2c8134ff24905bf3d 100644
--- a/src/main/java/co/aikar/timings/Timings.java
+++ b/src/main/java/co/aikar/timings/Timings.java
@@ -30,6 +30,8 @@ import org.bukkit.Bukkit;
 import org.bukkit.command.CommandSender;
 import org.bukkit.plugin.Plugin;
 
+import java.util.Collection;
+import java.util.Collections;
 import java.util.List;
 import java.util.Queue;
 import java.util.logging.Level;
@@ -246,11 +248,11 @@ public final class Timings {
      * If sender is null, ConsoleCommandSender will be used.
      * @param sender The sender to send to, or null to use the ConsoleCommandSender
      */
-    public static void generateReport(@Nullable CommandSender sender) {
+    public static void generateReport(@Nullable Collection<CommandSender> sender) {
         if (sender == null) {
-            sender = Bukkit.getConsoleSender();
+            sender = Collections.singleton(Bukkit.getConsoleSender());
         }
-        requestingReport.add(sender);
+        requestingReport.addAll(sender);
     }
 
     /**
diff --git a/src/main/java/co/aikar/timings/TimingsCommand.java b/src/main/java/co/aikar/timings/TimingsCommand.java
index 3132dc98d26c54c5e46162e53aaed195d7335c8d..a9e5a71bef1ab365dcf3b0ba9d0c4c6c570a1751 100644
--- a/src/main/java/co/aikar/timings/TimingsCommand.java
+++ b/src/main/java/co/aikar/timings/TimingsCommand.java
@@ -25,13 +25,17 @@ package co.aikar.timings;
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableList;
+import net.kyori.adventure.text.TextComponent;
 import net.kyori.adventure.text.format.NamedTextColor;
+import org.bukkit.Bukkit;
 import org.bukkit.command.CommandSender;
 import org.bukkit.command.defaults.BukkitCommand;
 import org.bukkit.util.StringUtil;
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.stream.Collectors;
+
 import org.jetbrains.annotations.NotNull;
 
 import static net.kyori.adventure.text.Component.text;
@@ -60,35 +64,35 @@ public class TimingsCommand extends BukkitCommand {
         final String arg = args[0];
         if ("on".equalsIgnoreCase(arg)) {
             Timings.setTimingsEnabled(true);
-            sender.sendMessage(text("Enabled Timings & Reset"));
+            sendMessage(text("Enabled Timings & Reset"));
             return true;
         } else if ("off".equalsIgnoreCase(arg)) {
             Timings.setTimingsEnabled(false);
-            sender.sendMessage(text("Disabled Timings"));
+            sendMessage(text("Disabled Timings"));
             return true;
         }
 
         if (!Timings.isTimingsEnabled()) {
-            sender.sendMessage(text("Please enable timings by typing /timings on"));
+            sendMessage(text("Please enable timings by typing /timings on"));
             return true;
         }
 
         long now = System.currentTimeMillis();
         if ("verbon".equalsIgnoreCase(arg)) {
             Timings.setVerboseTimingsEnabled(true);
-            sender.sendMessage(text("Enabled Verbose Timings"));
+            sendMessage(text("Enabled Verbose Timings"));
             return true;
         } else if ("verboff".equalsIgnoreCase(arg)) {
             Timings.setVerboseTimingsEnabled(false);
-            sender.sendMessage(text("Disabled Verbose Timings"));
+            sendMessage(text("Disabled Verbose Timings"));
             return true;
         } else if ("reset".equalsIgnoreCase(arg)) {
             if (now - lastResetAttempt < 30000) {
                 TimingsManager.reset();
-                sender.sendMessage(text("Timings reset. Please wait 5-10 minutes before using /timings report.", NamedTextColor.RED));
+                sendMessage(text("Timings reset. Please wait 5-10 minutes before using /timings report.", NamedTextColor.RED));
             } else {
                 lastResetAttempt = now;
-                sender.sendMessage(text("WARNING: Timings v2 should not be reset. If you are experiencing lag, please wait 3 minutes and then issue a report. The best timings will include 10+ minutes, with data before and after your lag period. If you really want to reset, run this command again within 30 seconds.", NamedTextColor.RED));
+                sendMessage(text("WARNING: Timings v2 should not be reset. If you are experiencing lag, please wait 3 minutes and then issue a report. The best timings will include 10+ minutes, with data before and after your lag period. If you really want to reset, run this command again within 30 seconds.", NamedTextColor.RED));
             }
         } else  if (
             "paste".equalsIgnoreCase(arg) ||
@@ -97,13 +101,17 @@ public class TimingsCommand extends BukkitCommand {
                 "merged".equalsIgnoreCase(arg) ||
                 "separate".equalsIgnoreCase(arg)
             ) {
-            Timings.generateReport(sender);
+            Timings.generateReport(Bukkit.getOnlinePlayers().stream().filter(p -> p.hasPermission(this.getPermission())).collect(Collectors.toList()));
         } else {
             sender.sendMessage(text("Usage: " + this.usageMessage, NamedTextColor.RED));
         }
         return true;
     }
 
+    private void sendMessage(TextComponent message) {
+        Bukkit.getOnlinePlayers().stream().filter(p -> p.hasPermission(this.getPermission())).forEach(p -> p.sendMessage(message));
+    }
+
     @NotNull
     @Override
     public List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args) {
